{{- if .Values.deployment.enabled -}}
apiVersion: apps/v1
kind: {{ .Values.deployment.kind }}
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
    {{- with .Values.deployment.labels }}
    {{ toYaml . | indent 4 }}
    {{- end }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.deployment.replicas }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  {{- with .Values.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.deployment.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      containers:
        {{- if and .Values.configMapReload.enabled .Values.ports.http.enabled }}
        - name: {{ template "prometheus.name" . }}-configmap-reload
          image: "{{ .Values.configMapReload.image.repository }}:{{ .Values.configMapReload.image.tag }}"
          imagePullPolicy: "{{ .Values.configMapReload.image.pullPolicy }}"
          args:
            - --webhook-url=http://127.0.0.1:{{ .Values.ports.http.port }}/-/reload
          {{- range $i, $val := .Values.configMapReload.extraArgs }}
            - {{ $val }}
          {{- end }}
            - --volume-dir={{ .Values.configMap.mountPath }}
          {{- range .Values.configMapReload.extraConfigMapMounts }}
            - --volume-dir={{ .mountPath }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.configMap.mountPath }}
              readOnly: true
            {{- range .Values.configMapReload.extraConfigMapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if not (empty .subPath) }}
              subPath: {{ .subPath }}
              {{- end }}
              readOnly: true
            {{- end }}
          resources: {{ if not .Values.configMapReload.resources -}}{}{{- end }}
            {{- if .Values.configMapReload.resources }}
            {{- toYaml .Values.configMapReload.resources | nindent 12 }}
            {{- end }}
        {{- end }}
        - name: {{ template "prometheus.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- if .Values.ports.http.enabled }}
            - name: http
              containerPort: {{ .Values.ports.http.port }}
              protocol: TCP
            {{- end }}
          env:
            {{- range $i, $val := .Values.env }}
            - name: {{ $val.name | quote }}
              value: {{ $val.value | quote }}
            {{- end }}
          args:
            {{- /* skip defaults if set by extra args */ -}}
            {{- $skip := dict -}}
            {{- range $i, $val := .Values.extraArgs }}
              {{- $_ := set $skip (regexFind "--[a-zA-Z.]+" $val) "yes" -}}
            {{- end -}}

            {{- /* --config.file */ -}}
            {{- if not (eq (get $skip "--config.file") "yes") }}
            - --config.file={{ .Values.configMap.mountPath }}/prometheus.yml
            {{- end }}

            {{- /* --storage.tsdb.path */ -}}
            {{- if not (eq (get $skip "--storage.tsdb.path") "yes") }}
            - --storage.tsdb.path={{ .Values.persistentVolumeClaim.mountPath }}
            {{- end }}

            {{- /* extra args */ -}}
            {{- range $i, $val := .Values.extraArgs }}
            - {{ $val }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.configMap.mountPath }}
            - name: storage-volume
              mountPath: {{ .Values.persistentVolumeClaim.mountPath }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          resources: {{ if not .Values.resources -}}{}{{- end }}
            {{- if .Values.resources }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
      volumes:
        - name: config-volume
          configMap:
            {{- if and .Values.configMap.create (empty .Values.configMap.existingConfigMap) }}
            name: {{ printf "%s-config" (include "prometheus.fullname" . ) }}
            {{- else }}
            name: {{ .Values.configMap.existingConfigMap }}
            {{- end }}
        - name: storage-volume
          persistentVolumeClaim:
            {{- if and .Values.persistentVolumeClaim.create (empty .Values.persistentVolumeClaim.existingPersistentVolumeClaim) }}
            claimName: {{ printf "%s-storage" (include "prometheus.fullname" . ) }}
            {{- else }}
            claimName: {{ .Values.persistentVolumeClaim.existingPersistentVolumeClaim }}
            {{- end }}
        {{- range .Values.configMapReload.extraConfigMapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
{{- end }}
